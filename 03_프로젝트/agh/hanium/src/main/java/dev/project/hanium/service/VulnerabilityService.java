package dev.project.hanium.service;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import dev.project.hanium.dto.VulnerabilitiesResultDto;
import lombok.RequiredArgsConstructor;
import org.springframework.http.*;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import java.util.List;

@Service
@RequiredArgsConstructor
public class VulnerabilityService {
    private final String flaskServerUrl = "http://210.110.39.163:3333/vulnerabilities";
    private final RestTemplate restTemplate;
    private final ObjectMapper objectMapper;
    public List<VulnerabilitiesResultDto> getResult(String url) throws JsonProcessingException {
        // Flask 서버로 요청 보내기
        HttpHeaders headers = new HttpHeaders();
        headers.setContentType(MediaType.APPLICATION_JSON);

        HttpEntity<String> requestEntity = new HttpEntity<>(url, headers);

        ResponseEntity<String> responseEntity = restTemplate.exchange(flaskServerUrl, HttpMethod.POST, requestEntity, String.class);
        String resultArray=responseEntity.getBody();

        List<VulnerabilitiesResultDto> result = objectMapper.readValue(resultArray, new TypeReference<List<VulnerabilitiesResultDto>>() {});
        return result;
    }
}
